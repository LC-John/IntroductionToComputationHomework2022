/*****
题目描述

某招聘机构举办招聘活动，事先不知道参会的确切人数。为了今后类似的招聘活动选择适当大小的场馆，
招聘机构拟对每位参会人的进出场馆时间进行记录。设第i个人进入会场的时间和离开会场的时间分别是
xi, yi，那么，这个人在招聘会场的时间段t满足 xi <= t < yi。为简便起见，进出时间点用整数表示，
且满足 0 <= xi < yi<1000。请统计，在这一天的招聘活动中，参会的总人数有多少；高峰时，最多有
多少人同时在场。

关于输入

数据包括2行，这2行的数据个数相同：
第1行表示第i个人的到达时间xi，数之间用逗号间隔；
后1行表示第i个人的对应的离开时间yi，数之间也用逗号间隔。
例如：
2,5,4,6,7,3,1,6,2
5,6,7,7,8,4,3,9,4
表示有9个人，进出场的时间分别是：
[2,5),[5,6),[4,7),[6,7),[7,8),[3,4),[1,3),[6,9),[2,4)

关于输出

参加会议的总人数以及最多有多少人同时在场，两者之间以空格间隔。
上面例子中，参加会议的总人数为9人，最多的时候有3人同时在场。如，时间段：[2,5),[1,3),[2,4)

例子输入

2,5,4,6,7,3,1,6,2
5,6,7,7,8,4,3,9,4

例子输出

9 3

提示信息

总人数不超过1000人。
*****/

#include <iostream>
#include <algorithm>
using namespace std;

#define MAX_N 1010
#define MAX_T 1010

struct event
{
    int _begin;
    int _end;
} p[MAX_N] = {{0, 0}};
int _time[MAX_T] = {0};

int main()
{
    char c = '\0';
    int n = 0;
    int ans = 0;    // 最多有多少人同时在会场

    /** 读入数据 **/
    while(cin >> p[n++]._begin) // 读入第一行数据的数字部分
    {
        cin.get(c);             // 读入数字后面的字符
        if (c == '\n')          // 若字符为'\n'，则说明这一行读完了
            break;
    }
    for (int i = 0; i < n; i++) // 读入第二行数据
    {
        if (i)
            cin >> c;
        cin >> p[i]._end;
    }

    /** 记录每个时间点有多少人在会场 **/
    for (int i = 0; i < n; i++)
        for (int t = p[i]._begin; t < p[i]._end; t++)
            _time[t]++;

    /** 最多有多少人在会场 **/
    for (int t = 0; t < MAX_T; t++)
        if (_time[t] > ans)
            ans = _time[t];

    cout << n << " " << ans << endl;
    return 0;
}
