/*****
题目描述

输入一个整数，判断它能否被3，5，7整除，并输出以下信息：
（1）能同时被3，5，7整除（直接输出3 5 7，每个数中间一个空格）；
（2）能被其中两个数整除（输出两个数，小的在前，大的在后。例如：3 5或者 3 7或者5 7,中间用空格分隔）
（3）能被其中一个数整除（输出这个除数）
（4）不能被任何数整除；（输出小写字符n)

关于输入

一个整数

关于输出

实现题目的要求

例子输入

21

例子输出

3 7
*****/

#include <iostream>
using namespace std;

#define MAX_N 100       // 宏定义数组大小
/**
const int MAX_N = 100;  // 也可以使用常量定义数组大小
**/
int _div[MAX_N] = {3, 5, 7};    // 存放除数的数组，方便扩展
                                // 例如要判断能否被10个数（甚至更多）整除，也是一样的写法
                                // 起名_div而不是div是为了避免与编程网格环境中的变量命名重复
int n_div = 3;                  // 上面的数组中存放了几个数

int main()
{
    int num = 0;        // 待判断的数字
    bool flag = true;   // 记录是否还没有输出
    cin >> num;
    /** 不管是多少个数，都可以用同样的循环解决 **/
    for (int i = 0; i < n_div; i++)
        if (num % _div[i] == 0)
        {
            if (flag)                   // 若此前还没有过输出
                cout << _div[i];        // 则不输出空格
            else                        // 否则
                cout << " " << _div[i]; // 在数字前先输出一个空格
            flag = false;   // 将flag置为false，表示已经有过输出了
        }
    if (flag)           // 从未有过输出
        cout << "n";    // 则输出一个字符'n'
    return 0;
}
