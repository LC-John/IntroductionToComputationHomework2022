/*****
题目描述

菲波那契数列是指这样的数列: 数列的第一个和第二个数都为1，接下来每个数都等于前面2个数之和。
给出一个正整数a，要求菲波那契数列中第a个数是多少。

关于输入

第1行是测试数据的组数n，后面跟着n行输入。每组测试数据占1行，包括一个正整数a(1 <= a <= 20)

关于输出

n行，每行输出对应一个输入。输出应是一个正整数，为菲波那契数列中第a个数的大小

例子输入

4
5
2
19
1

例子输出

5
1
4181
1

提示信息

可用数组实现
*****/

#include <iostream>
using namespace std;

#define MAX_N 100           // 宏定义数组大小

int fib[MAX_N] = {1, 1};    // 存放菲波那切数列的数组
int n_fib = 2;               // 当前计算过的菲波那切数列的数目

int main()
{
    int n = 0;      // 输入组数
    int idx = 0;    // 待求的菲波那切数列位数
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        cin >> idx;
        /**
        可以提前计算足够多的斐波那契数列，但这样可能会有冗余
        反过来思考，需要多少菲波那切数列，就计算多少
        如果不够，那么就补充计算直到足够为止
        **/
        if (idx > n_fib)                        // 若要求输出的这一位菲波那切数列还没有计算过
            for (int j = n_fib; j < idx; j++)   // 则通过循环，计算至该位置
                fib[j] = fib[j-1] + fib[j-2];
        cout << fib[idx-1] << endl; // 输出该位菲波那切数列
    }
    return 0;
}
