/*****
题目描述

“相关月”是指那些在一年中月份的第一天星期数相同的月份。例如，九月和十二月是相关的，
因为九月一日和十二月一日的星期数总是相同的。两个月份相关，当且仅当两个月份第一天相差
的天数能被7整除，也就是说，这两天相差为几个整星期。又如，二月和三月一般都是相关月，
因为二月有28天，能被7整除，也恰好为4个星期。而在闰年，一月和二月的相关月与它们在平年
的相关月是不同的，因为二月有29天，其后每个月份的第一天星期数都推后了一天。

关于输入

输入的第一行为整数n（n≤200），
其后n行，每行三个整数，依次为一个年份和两个月份，整数之间用一个空格分隔。

关于输出

输出有n行，对应于每个输入的年份和相应两个月份，
如果这两个月份是相关的，则输出YES；
否则，输出NO。

例子输入

5
1994 10 9
1935 12 1
1957 1 9
1917 9 12
1948 1 4

例子输出

NO
NO
NO
YES
YES

提示信息

可基于以前做过的判断给定日期是本年的第几天的程序进行改造。
此题目编程中可以不用数组，可在循环中每读入一组数据，输出一次相应的结果。
*****/

#include <iostream>
using namespace std;

#define N_MONTH 12
#define N_WEEKDAY 7

int month[2][N_MONTH + 1] = {
    {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31},
    {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}
};

int is_leap(int y)
{
    if (!(y % 400) || ((y % 100) && !(y % 4)))
        return 1;
    return 0;
}

int main()
{
    int n = 0;
    int y = 0, m1 = 0, m2 = 0;
    int leap = 0, cnt = 0;
    cin >> n;
    while (n--)
    {
        cin >> y >> m1 >> m2;
        if (m1 > m2)
        {
            m1 ^= m2;
            m2 ^= m1;
            m1 ^= m2;
        }
        leap = is_leap(y);
        cnt = 0;
        for (int i = m1; i < m2; i++)
            cnt += month[leap][i];
        if (cnt % N_WEEKDAY)
            cout << "NO" << endl;
        else
            cout << "YES" << endl;
    }
    return 0;
}
